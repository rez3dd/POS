// prisma/schema.prisma
// ✅ เพิ่มส่วน generator และ datasource ด้านบนให้ครบ

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // ใช้ SQLite ตามโปรเจกต์ของคุณ
  url      = env("DATABASE_URL") // อ่านค่าจากไฟล์ .env
}

enum MenuStatus {
  AVAILABLE
  UNAVAILABLE
}

enum Role {
  ADMIN
  STAFF
}


model Category {
  id    Int    @id @default(autoincrement())
  name  String
  menus Menu[]
}

model Menu {
  id         Int        @id @default(autoincrement())
  name       String
  price      Int        @default(0)
  imageUrl   String?
  status     MenuStatus @default(AVAILABLE)
  categoryId Int?
  category   Category?  @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items OrderItem[]
}

model Order {
  id           Int         @id @default(autoincrement())
  name         String? // ✅ เปลี่ยนเป็น optional แล้ว
  code         String      @unique
  customerName String?
  method       String? // ✅ เพิ่มรองรับจากโค้ด backend
  amountPaid   Int? // ✅ เพิ่มรองรับจากโค้ด backend
  change       Int? // ✅ เพิ่มรองรับจากโค้ด backend
  status       OrderStatus @default(UNPAID)
  note         String? // ✅ เพิ่มรองรับจากโค้ด backend
  total        Int         @default(0)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  items        OrderItem[]

  @@index([createdAt], name: "idx_order_createdAt")
}

enum OrderStatus {
  UNPAID
  PAID
  CANCELLED
}

model OrderItem {
  id      Int @id @default(autoincrement())
  orderId Int
  menuId  Int
  qty     Int
  price   Int

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menu  Menu  @relation(fields: [menuId], references: [id])
}
model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(STAFF)   // ← ใช้ enum
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}